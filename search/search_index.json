{"config":{"lang":["en","ru"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"FastAPI Easy Versioning","text":"<p>The English documentation has been automatically translated. If you notice any grammatical or semantic errors, please help improve it by contributing corrections on GitHub, or refer to the original Russian documentation.</p> <p>This is a solution for building versioned APIs automatically using FastAPI. It enables automatic inheritance of endpoints from previous FastAPI sub-applications into newer versions based on configuration, and correctly reflects them in the OpenAPI schema.</p>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install fastapi-easy-versioning\n</code></pre> <p>PyPI</p>"},{"location":"#usage","title":"Usage","text":"<p>To implement versioning, use the <code>VersioningMiddleware</code> and the dependency factory <code>versioning</code>.</p> <p>Example:</p> <pre><code>from fastapi import FastAPI, Depends\nfrom fastapi_easy_versioning import VersioningMiddleware, versioning\n\napp = FastAPI()\napp_v1 = FastAPI(api_version=1)\napp_v2 = FastAPI(api_version=2)\n\napp.mount(\"/v1\", app_v1)\napp.mount(\"/v2\", app_v2)\napp.add_middleware(VersioningMiddleware)\n\n@app_v1.get('/only-v1', dependencies=[Depends(versioning(until=1))])\ndef only_v1() -&gt; str:\n    return \"Available only in version v1\"\n\n@app_v1.get('/all-versions', dependencies=[Depends(versioning())])\ndef all_versions() -&gt; str:\n    return \"Available in all versions starting from v1\"\n\n@app_v2.get('/from-v2', dependencies=[Depends(versioning())])\ndef from_v2() -&gt; str:\n    return \"Available starting from v2 and in all future versions\"\n</code></pre> <pre><code>graph TD\n    A[Availability by version]\n    A --&gt; B[v1]\n    A --&gt; C[v2]\n\n    B --&gt; B1[\"/only-v1 \u2713\"]\n    B --&gt; B2[\"/all-versions \u2713\"]\n    B --&gt; B3[\"/from-v2 \u2717\"]\n\n    C --&gt; C1[\"/only-v1 \u2717\"]\n    C --&gt; C2[\"/all-versions \u2713\"]\n    C --&gt; C3[\"/from-v2 \u2713\"]\n\n    style B1 fill:#90EE90\n    style B2 fill:#90EE90\n    style B3 fill:#FFB6C1\n\n    style C1 fill:#FFB6C1\n    style C2 fill:#90EE90\n    style C3 fill:#90EE90</code></pre> <p>The endpoint <code>/only-v1</code> is available only in version <code>v1</code> at <code>/v1/only-v1</code>. The endpoint <code>/from-v2</code> becomes available starting from version <code>v2</code> at <code>/v2/from-v2</code> and is automatically inherited in all subsequent versions. The endpoint <code>/all-versions</code>, defined in <code>v1</code>, is accessible at both <code>/v1/all-versions</code> and <code>/v2/all-versions</code> due to the inheritance mechanism.</p> <p>Using the <code>versioning</code> dependency factory, you can specify the last version in which an endpoint remains available by setting the <code>until</code> parameter to a version number. If <code>until</code> is set to <code>None</code> or omitted, the endpoint will be available in the version it was declared and in all later versions.</p> <p>To associate a sub-application with a specific version, use the <code>api_version</code> parameter when creating the <code>FastAPI</code> instance. It must be an integer. Sub-applications without the <code>api_version</code> parameter will be ignored during versioning processing.</p> <p>More examples are available in the examples section.</p>"},{"location":"dependency/","title":"Versioning Dependency","text":"<p>The English documentation has been automatically translated. If you notice any grammatical or semantic errors, please help improve it by contributing corrections on GitHub, or refer to the original Russian documentation.</p> <p>The <code>VersioningSupport</code> dependency and its factory <code>versioning</code> form the core mechanism for configuring and parameterizing API versioning.</p> <p>The <code>versioning</code> factory allows you to specify the API version up to which an endpoint will be included in subsequent FastAPI sub-applications. If the factory is called without arguments or with <code>None</code>, the endpoint will be present in all future versions of the API.</p>"},{"location":"dependency/#using-the-dependency","title":"Using the Dependency","text":"<p>It is recommended to create the dependency through the <code>versioning</code> factory. The dependency can be added in all locations supported by the FastAPI interface.</p> <pre><code>from fastapi import FastAPI, Depends\nfrom fastapi_easy_versioning import versioning\n\nv1_app = FastAPI(api_version=1)\n\n@v1_app.get('/decorated-endpoint', dependencies=[Depends(versioning())])\ndef endpoint() -&gt; None: ...\n\n# Can also be added via the application's add_api_route method\nv1_app.add_api_route('/app-add_api_route-call-endpoint', endpoint, dependencies=[Depends(versioning())])\n\n# Or directly through the router\nv1_app.router.add_api_route('/router-add_api_route-call-endpoint', endpoint, dependencies=[Depends(versioning())])\n</code></pre> <p>The dependency can be added to an entire router during initialization of a separate router or the whole FastAPI application. In this case, all endpoints added to it will participate in versioning according to the factory settings.</p> <pre><code>from fastapi import FastAPI, Depends, APIRouter\nfrom fastapi_easy_versioning import versioning\n\nv1_app = FastAPI(api_version=1)\nv2_app = FastAPI(api_version=2, dependencies=[Depends(versioning(until=2))])\n\nrouter = APIRouter(dependencies=[Depends(versioning())])\nv1_app.include_router(router)\n</code></pre>"},{"location":"dependency/#accessing-dependency-data","title":"Accessing Dependency Data","text":"<p>The dependency can be injected into an endpoint using the <code>Annotated</code> syntax or the traditional dependency injection mechanism.</p> <pre><code>from fastapi import FastAPI, Depends\nfrom typing import Annotated\nfrom fastapi_easy_versioning import VersioningSupport, versioning\n\nv1_app = FastAPI(api_version=1)\n\n@v1_app.get('/endpoint')\ndef endpoint(version: Annotated[VersioningSupport, Depends(versioning())]) -&gt; str:\n    return f\"Available from version {version.origin} to version {version.until}\"\n</code></pre> <p>This provides access to the versioning configuration for reading:</p> <ul> <li><code>origin</code> \u2013 the version number from which the endpoint was added</li> <li><code>until</code> \u2013 the version number up to which the endpoint is available. If not specified explicitly, it will be set to the latest available API version.</li> </ul>"},{"location":"middleware/","title":"Middleware","text":"<p>The English documentation has been automatically translated. If you notice any grammatical or semantic errors, please help improve it by contributing corrections on GitHub, or refer to the original Russian documentation.</p> <p>The <code>VersioningMiddleware</code> handles the core functionality of API versioning.</p> <p>The middleware is added only to the FastAPI application that aggregates sub-applications responsible for specific versions.</p> <pre><code>from fastapi import FastAPI, Depends\nfrom fastapi_easy_versioning import VersioningMiddleware, versioning\n\napp = FastAPI()\napp_v1 = FastAPI(api_version=1)\napp_v2 = FastAPI(api_version=2)\n\napp.mount(\"/v1\", app_v1)\napp.mount(\"/v2\", app_v2)\napp.add_middleware(VersioningMiddleware)\n</code></pre> <p>If you need to create two or more isolated versioned APIs that should operate independently, you should add <code>VersioningMiddleware</code> to each such aggregating application.</p> <pre><code>from fastapi import Depends, FastAPI, middleware\nfrom fastapi_easy_versioning import VersioningMiddleware\n\napp = FastAPI()\n\npublic_app = FastAPI(middleware=[middleware.Middleware(VersioningMiddleware)])\npublic_v1 = FastAPI(api_version=1)\npublic_v2 = FastAPI(api_version=2)\n\nprivate_app = FastAPI(middleware=[middleware.Middleware(VersioningMiddleware)])\nprivate_v1 = FastAPI(api_version=1)\nprivate_v2 = FastAPI(api_version=2)\n\napp.mount(\"/api/public\", public_app)\npublic_app.mount(\"/v1\", public_v1)\npublic_app.mount(\"/v2\", public_v2)\n\napp.mount(\"/api/private\", private_app)\nprivate_app.mount(\"/v1\", private_v1)\nprivate_app.mount(\"/v2\", private_v2)\n</code></pre>"},{"location":"middleware/#versioned-applications-configuration","title":"Versioned Applications Configuration","text":"<p>The middleware identifies which FastAPI applications participate in versioning using the <code>api_version</code> extra parameter. If an application doesn't have this parameter, it will be ignored during versioning: endpoints won't be added to it, and endpoints won't be taken from it, even if they were correctly marked with the <code>VersioningSupport</code> dependency.</p>"},{"location":"middleware/#middleware-operation","title":"Middleware Operation","text":"<p>The middleware checks for versioned endpoints and sub-applications on the first request and adds endpoints to sub-applications according to their versioning settings, while also rebuilding the OpenAPI schema.</p> <p>The middleware caches information about built endpoints and doesn't perform additional work on subsequent requests. However, if a versioned endpoint is added during runtime, it will be added to all relevant sub-applications on the next request, and their OpenAPI schemas will be rebuilt.</p>"},{"location":"examples/multiple/","title":"Multiple APIs Versioning Example","text":"<p>The English documentation has been automatically translated. If you notice any grammatical or semantic errors, please help improve it by contributing corrections on GitHub, or refer to the original Russian documentation.</p> <p>The example is available on GitHub.</p> <p>To run it locally, clone the repository and execute the following command:</p> <pre><code>git clone https://github.com/feodor-ra/fastapi-easy-versioning.git\n</code></pre> <pre><code>uvx --python=3.13 --from=\"fastapi[standard]\" --with=\"fastapi-easy-versioning\" fastapi dev fastapi-easy-versioning/examples/multiple_versioning.py\n</code></pre> <p>The example contains the following code:</p> <pre><code>from fastapi import Depends, FastAPI, middleware\nfrom fastapi_easy_versioning import (\n    VersioningMiddleware,\n    versioning,\n)\n\napp = FastAPI()\n\npublic_app = FastAPI(middleware=[middleware.Middleware(VersioningMiddleware)])\npublic_v1 = FastAPI(api_version=1)\npublic_v2 = FastAPI(api_version=2)\n\nprivate_app = FastAPI(middleware=[middleware.Middleware(VersioningMiddleware)])\nprivate_v1 = FastAPI(api_version=1)\nprivate_v2 = FastAPI(api_version=2)\n\napp.mount(\"/api/public\", public_app)\npublic_app.mount(\"/v1\", public_v1)\npublic_app.mount(\"/v2\", public_v2)\n\napp.mount(\"/api/private\", private_app)\nprivate_app.mount(\"/v1\", private_v1)\nprivate_app.mount(\"/v2\", private_v2)\n\n\n@private_v1.get(\"/endpoint\", dependencies=[Depends(versioning(until=1))])\ndef private_endpoint() -&gt; str:\n    return \"I'm v1 private endpoint\"\n\n\n@private_v1.get(\"/another-endpoint\", dependencies=[Depends(versioning())])\ndef private_another_endpoint() -&gt; str:\n    return \"I'm v1 private another endpoint\"\n\n\n@private_v2.get(\"/endpoint\", dependencies=[Depends(versioning())])\ndef private_endpoint_v2() -&gt; str:\n    return \"I'm v2 private endpoint\"\n\n\n@public_v1.get(\"/endpoint\", dependencies=[Depends(versioning(until=1))])\ndef public_endpoint() -&gt; str:\n    return \"I'm v1 public endpoint\"\n\n\n@public_v1.get(\"/another-endpoint\", dependencies=[Depends(versioning())])\ndef public_another_endpoint() -&gt; str:\n    return \"I'm v1 public another endpoint\"\n\n\n@public_v2.get(\"/endpoint\", dependencies=[Depends(versioning())])\ndef public_endpoint_v2() -&gt; str:\n    return \"I'm v2 public endpoint\"\n</code></pre> <p>This code creates two independent versioned APIs: public and private. Each has two versions (v1 and v2). Swagger documentation for them is available at:</p> <ul> <li>Public API v1: http://127.0.0.1:8000/api/public/v1/docs</li> <li>Public API v2: http://127.0.0.1:8000/api/public/v2/docs</li> <li>Private API v1: http://127.0.0.1:8000/api/private/v1/docs</li> <li>Private API v2: http://127.0.0.1:8000/api/private/v2/docs</li> </ul> <p>The resulting structure is as follows:</p> <ul> <li>In the public API:</li> <li><code>/endpoint</code> is available only in version v1 (with <code>until=1</code> restriction)</li> <li><code>/another-endpoint</code> is available in all versions (starting from v1)</li> <li> <p>in v2, a new <code>/endpoint</code> is added, which overrides the version from v1</p> </li> <li> <p>In the private API:</p> </li> <li><code>/endpoint</code> is available only in version v1 (with <code>until=1</code> restriction)</li> <li><code>/another-endpoint</code> is available in all versions (starting from v1)</li> <li>in v2, a new <code>/endpoint</code> is added, which overrides the version from v1</li> </ul> <p>Both APIs operate independently thanks to the use of separate <code>VersioningMiddleware</code> instances.</p> <pre><code>graph TD\n    A[Endpoint Availability] --&gt; B[Public API]\n    A --&gt; C[Private API]\n\n    B --&gt; B1[v1&lt;br/&gt;api_version=1]\n    B --&gt; B2[v2&lt;br/&gt;api_version=2]\n\n    C --&gt; C1[v1&lt;br/&gt;api_version=1]\n    C --&gt; C2[v2&lt;br/&gt;api_version=2]\n\n    B1 --&gt; B11[\"/endpoint \u2713&lt;br/&gt;(until=1)\"]\n    B1 --&gt; B12[\"/another-endpoint \u2713\"]\n\n    B2 --&gt; B21[\"/endpoint \u2713&lt;br/&gt;(from v2)\"]\n    B2 --&gt; B22[\"/another-endpoint \u2713\"]\n\n    C1 --&gt; C11[\"/endpoint \u2713&lt;br/&gt;(until=1)\"]\n    C1 --&gt; C12[\"/another-endpoint \u2713\"]\n\n    C2 --&gt; C21[\"/endpoint \u2713&lt;br/&gt;(from v2)\"]\n    C2 --&gt; C22[\"/another-endpoint \u2713\"]\n\n    style B11 fill:#90EE90\n    style B12 fill:#90EE90\n    style B21 fill:#90EE90\n    style B22 fill:#90EE90\n\n    style C11 fill:#90EE90\n    style C12 fill:#90EE90\n    style C21 fill:#90EE90\n    style C22 fill:#90EE90\n\n    classDef available fill:#90EE90,stroke:#333;\n    classDef notAvailable fill:#FFB6C1,stroke:#333;</code></pre>"},{"location":"examples/simple/","title":"Simple Versioning Example","text":"<p>The English documentation has been automatically translated. If you notice any grammatical or semantic errors, please help improve it by contributing corrections on GitHub, or refer to the original Russian documentation.</p> <p>The example is available on GitHub.</p> <p>To run it locally, clone the repository and execute the following command:</p> <pre><code>git clone https://github.com/feodor-ra/fastapi-easy-versioning.git\n</code></pre> <pre><code>uvx --python=3.13 --from=\"fastapi[standard]\" --with=\"fastapi-easy-versioning\" fastapi dev fastapi-easy-versioning/examples/simple_versioning.py\n</code></pre> <p>The example contains the following code:</p> <pre><code>from typing import Annotated\n\nfrom fastapi import Depends, FastAPI, middleware\nfrom fastapi_easy_versioning import (\n    VersioningMiddleware,\n    VersioningSupport,\n    versioning,\n)\n\napp = FastAPI(middleware=[middleware.Middleware(VersioningMiddleware)])\napp_v1 = FastAPI(api_version=1)\napp_v2 = FastAPI(api_version=2)\napp_v3 = FastAPI(api_version=3)\n\napp.mount(\"/v1\", app_v1)\napp.mount(\"/v2\", app_v2)\napp.mount(\"/v3\", app_v3)\n\n\n@app_v1.get(\"/endpoint\", dependencies=[Depends(versioning(until=2))])\ndef endpoint() -&gt; str:\n    return \"I'm v1 endpoint\"\n\n\n@app_v1.get(\"/another-endpoint\")\ndef another_endpoint(\n    version: Annotated[VersioningSupport, Depends(versioning())],\n) -&gt; str:\n    return f\"I'm v{version.origin} another endpoint\"\n\n\n@app_v2.get(\"/new-another-endpoint\", dependencies=[Depends(versioning())])\ndef new_another_endpoint() -&gt; str:\n    return \"I'm v2 new another endpoint\"\n\n\n@app_v3.get(\"/another-endpoint\", dependencies=[Depends(versioning())])\ndef overload_another_endpoint() -&gt; str:\n    return \"I'm v3 overloaded another endpoint\"\n</code></pre> <p>This code creates three API versions (v1, v2, v3), with Swagger documentation available at:</p> <ul> <li>http://127.0.0.1:8000/v1/docs</li> <li>http://127.0.0.1:8000/v2/docs</li> <li>http://127.0.0.1:8000/v3/docs</li> </ul> <p>The resulting structure is as follows:</p> <ul> <li>The first version includes two endpoints:</li> <li><code>/endpoint</code>, available in versions v1 and v2 (with <code>until=2</code> restriction)</li> <li> <p><code>/another-endpoint</code>, available across all versions (v1, v2, and v3)</p> </li> <li> <p>The second version introduces a new endpoint <code>/new-another-endpoint</code>, available in all versions starting from v2 (v2 and v3)</p> </li> <li> <p>The third version adds an endpoint <code>/another-endpoint</code> that overrides the same-named endpoint from the first version and will be available in all subsequent versions</p> </li> </ul> <pre><code>graph TD\n    A[Endpoint Availability] --&gt; B[v1&lt;br/&gt;api_version=1]\n    A --&gt; C[v2&lt;br/&gt;api_version=2]\n    A --&gt; D[v3&lt;br/&gt;api_version=3]\n\n    B --&gt; B1[\"/endpoint \u2713&lt;br/&gt;(until=2)\"]\n    B --&gt; B2[\"/another-endpoint \u2713\"]\n\n    C --&gt; C1[\"/endpoint \u2713&lt;br/&gt;(until=2)\"]\n    C --&gt; C2[\"/another-endpoint \u2713\"]\n    C --&gt; C3[\"/new-another-endpoint \u2713\"]\n\n    D --&gt; D1[\"/endpoint \u2717&lt;br/&gt;(until=2)\"]\n    D --&gt; D2[\"/another-endpoint \u2713&lt;br/&gt;(overridden in v3)\"]\n    D --&gt; D3[\"/new-another-endpoint \u2713\"]\n\n    style B1 fill:#90EE90\n    style B2 fill:#90EE90\n\n    style C1 fill:#90EE90\n    style C2 fill:#90EE90\n    style C3 fill:#90EE90\n\n    style D1 fill:#FFB6C1\n    style D2 fill:#90EE90\n    style D3 fill:#90EE90\n\n    classDef available fill:#90EE90,stroke:#333;\n    classDef notAvailable fill:#FFB6C1,stroke:#333;</code></pre>"},{"location":"ru/","title":"FastAPI Easy Versioning","text":"<p>\u042d\u0442\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e API \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c FastAPI, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u0438\u0437 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0445 \u0432\u0435\u0440\u0441\u0438\u0439 \u0441\u0443\u0431\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435, \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043e\u0442\u0440\u0430\u0436\u0430\u0435\u0442 \u0438\u0445 \u0432 OpenAPI-\u0441\u0445\u0435\u043c\u0435.</p>"},{"location":"ru/#_1","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430","text":"<pre><code>pip install fastapi-easy-versioning\n</code></pre> <p>PyPI</p>"},{"location":"ru/#_2","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435","text":"<p>\u0414\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c middleware <code>VersioningMiddleware</code> \u0438 \u0444\u0430\u0431\u0440\u0438\u043a\u0443 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 <code>versioning</code>.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440:</p> <pre><code>from fastapi import FastAPI, Depends\nfrom fastapi_easy_versioning import VersioningMiddleware, versioning\n\napp = FastAPI()\napp_v1 = FastAPI(api_version=1)\napp_v2 = FastAPI(api_version=2)\n\napp.mount(\"/v1\", app_v1)\napp.mount(\"/v2\", app_v2)\napp.add_middleware(VersioningMiddleware)\n\n@app_v1.get('/only-v1', dependencies=[Depends(versioning(until=1))])\ndef only_v1() -&gt; str:\n    return \"\u042f \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0432\u0435\u0440\u0441\u0438\u0438 v1\"\n\n@app_v1.get('/all-versions', dependencies=[Depends(versioning())])\ndef all_versions() -&gt; str:\n    return \"\u042f \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432\u043e \u0432\u0441\u0435\u0445 \u0432\u0435\u0440\u0441\u0438\u044f\u0445, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 v1\"\n\n@app_v2.get('/from-v2', dependencies=[Depends(versioning())])\ndef from_v2() -&gt; str:\n    return \"\u042f \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u0432\u0435\u0440\u0441\u0438\u0438 v2 \u0438 \u0432\u043e \u0432\u0441\u0435\u0445 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445\"\n</code></pre> <pre><code>graph TD\n    A[\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u044c \u043f\u043e \u0432\u0435\u0440\u0441\u0438\u044f\u043c]\n    A --&gt; B[v1]\n    A --&gt; C[v2]\n\n    B --&gt; B1[\"/only-v1 \u2713\"]\n    B --&gt; B2[\"/all-versions \u2713\"]\n    B --&gt; B3[\"/from-v2 \u2717\"]\n\n    C --&gt; C1[\"/only-v1 \u2717\"]\n    C --&gt; C2[\"/all-versions \u2713\"]\n    C --&gt; C3[\"/from-v2 \u2713\"]\n\n    style B1 fill:#90EE90\n    style B2 fill:#90EE90\n    style B3 fill:#FFB6C1\n\n    style C1 fill:#FFB6C1\n    style C2 fill:#90EE90\n    style C3 fill:#90EE90</code></pre> <p>\u042d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 <code>/only-v1</code> \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0432\u0435\u0440\u0441\u0438\u0438 <code>v1</code> \u2014 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 <code>/v1/only-v1</code>. \u042d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 <code>/from-v2</code> \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u043c \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u0432\u0435\u0440\u0441\u0438\u0438 <code>v2</code> \u2014 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 <code>/v2/from-v2</code> \u2014 \u0438 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u0442\u0441\u044f \u0432\u043e \u0432\u0441\u0435\u0445 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0432\u0435\u0440\u0441\u0438\u044f\u0445. \u042d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 <code>/all-versions</code>, \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u0432 <code>v1</code>, \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u043a\u0430\u043a \u0432 <code>/v1/all-versions</code>, \u0442\u0430\u043a \u0438 \u0432 <code>/v2/all-versions</code> \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c\u0443 \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f.</p> <p>\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 <code>versioning</code> \u043c\u043e\u0436\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c, \u0434\u043e \u043a\u0430\u043a\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d, \u043f\u0435\u0440\u0435\u0434\u0430\u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 <code>until</code> \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c \u0432\u0435\u0440\u0441\u0438\u0438. \u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 <code>until</code> \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0432 <code>None</code> \u0438\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e, \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 \u0442\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438, \u0433\u0434\u0435 \u043e\u043d \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d, \u0438 \u0432\u043e \u0432\u0441\u0435\u0445 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445.</p> <p>\u0427\u0442\u043e\u0431\u044b \u0443\u043a\u0430\u0437\u0430\u0442\u044c, \u043a\u0430\u043a\u043e\u0435 \u0441\u0443\u0431\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 <code>api_version</code> \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 <code>FastAPI</code>. \u041e\u043d \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0446\u0435\u043b\u044b\u043c \u0447\u0438\u0441\u043b\u043e\u043c. \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 <code>api_version</code> \u043d\u0435 \u0437\u0430\u0434\u0430\u043d, \u0441\u0443\u0431\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043e \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.</p> <p>\u0411\u043e\u043b\u044c\u0448\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u0432 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b.</p> <p> </p> <p></p>"},{"location":"ru/dependency/","title":"\u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u0434\u043b\u044f \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","text":"<p>\u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c <code>VersioningSupport</code> \u0438 \u043f\u043e\u0440\u043e\u0436\u0434\u0430\u044e\u0449\u0430\u044f \u0435\u0451 \u0444\u0430\u0431\u0440\u0438\u043a\u0430 <code>versioning</code> \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u043c \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c\u043e\u043c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f API.</p> <p>\u0424\u0430\u0431\u0440\u0438\u043a\u0430 <code>versioning</code> \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u044e API, \u0434\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0443\u0431\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f FastAPI. \u0415\u0441\u043b\u0438 \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u0444\u0430\u0431\u0440\u0438\u043a\u0443 \u0431\u0435\u0437 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0432 \u043d\u0435\u0451 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 <code>None</code>, \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0432\u043e \u0432\u0441\u0435\u0445 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0432\u0435\u0440\u0441\u0438\u044f\u0445 API.</p>"},{"location":"ru/dependency/#_2","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438","text":"<p>\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u0444\u0430\u0431\u0440\u0438\u043a\u0443 <code>versioning</code>. \u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u043c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u043e \u0432\u0441\u0435\u0445 \u043c\u0435\u0441\u0442\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 FastAPI.</p> <pre><code>from fastapi import FastAPI, Depends\nfrom fastapi_easy_versioning import versioning\n\nv1_app = FastAPI(api_version=1)\n\n@v1_app.get('/decorated-endpoint', dependencies=[Depends(versioning())])\ndef endpoint() -&gt; None: ...\n\n# \u0422\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u043c\u0435\u0442\u043e\u0434 add_api_route \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\nv1_app.add_api_route('/app-add_api_route-call-endpoint', endpoint, dependencies=[Depends(versioning())])\n\n# \u0418\u043b\u0438 \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u0447\u0435\u0440\u0435\u0437 \u0440\u043e\u0443\u0442\u0435\u0440\nv1_app.router.add_api_route('/router-add_api_route-call-endpoint', endpoint, dependencies=[Depends(versioning())])\n</code></pre> <p>\u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u043c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u0440\u0430\u0437\u0443 \u0432\u043e \u0432\u0435\u0441\u044c \u0440\u043e\u0443\u0442\u0435\u0440 \u043f\u0440\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0440\u043e\u0443\u0442\u0435\u0440\u0430 \u0438\u043b\u0438 \u0432\u0441\u0435\u0433\u043e FastAPI-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u0441\u0435 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b, \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0432 \u043d\u0435\u0433\u043e, \u0431\u0443\u0434\u0443\u0442 \u0443\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0432 \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c\u0438 \u0444\u0430\u0431\u0440\u0438\u043a\u0438.</p> <pre><code>from fastapi import FastAPI, Depends, APIRouter\nfrom fastapi_easy_versioning import versioning\n\nv1_app = FastAPI(api_version=1)\nv2_app = FastAPI(api_version=2, dependencies=[Depends(versioning(until=2))])\n\nrouter = APIRouter(dependencies=[Depends(versioning())])\nv1_app.include_router(router)\n</code></pre>"},{"location":"ru/dependency/#_3","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438","text":"<p>\u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u043c\u043e\u0436\u043d\u043e \u0432\u043d\u0435\u0434\u0440\u0438\u0442\u044c \u0432 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430 <code>Annotated</code> \u0438\u043b\u0438 \u0442\u0440\u0430\u0434\u0438\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c\u0430 \u0432\u043d\u0435\u0434\u0440\u0435\u043d\u0438\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439.</p> <pre><code>from fastapi import FastAPI, Depends\nfrom typing import Annotated\nfrom fastapi_easy_versioning import VersioningSupport, versioning\n\nv1_app = FastAPI(api_version=1)\n\n@v1_app.get('/endpoint')\ndef endpoint(version: Annotated[VersioningSupport, Depends(versioning())]) -&gt; str:\n    return f\"\u0414\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0441 \u0432\u0435\u0440\u0441\u0438\u0438 {version.origin} \u0434\u043e \u0432\u0435\u0440\u0441\u0438\u0438 {version.until}\"\n</code></pre> <p>\u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0439 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f:</p> <ul> <li><code>origin</code> \u2013 \u043d\u043e\u043c\u0435\u0440 \u0432\u0435\u0440\u0441\u0438\u0438, \u0441 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0431\u044b\u043b \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442</li> <li><code>until</code> \u2013 \u043d\u043e\u043c\u0435\u0440 \u0432\u0435\u0440\u0441\u0438\u0438, \u0434\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442. \u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d \u044f\u0432\u043d\u043e, \u0431\u0443\u0434\u0435\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f API.</li> </ul>"},{"location":"ru/middleware/","title":"Middleware","text":"<p>\u041e\u0441\u043d\u043e\u0432\u043d\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443 \u043f\u043e \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u044e \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 middleware <code>VersioningMiddleware</code>.</p> <p>Middleware \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0432 FastAPI-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0433\u0440\u0435\u0433\u0438\u0440\u0443\u0435\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0441\u0443\u0431\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043e\u0442\u0432\u0435\u0447\u0430\u044e\u0449\u0438\u0435 \u0437\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0435 \u0432\u0435\u0440\u0441\u0438\u0438.</p> <pre><code>from fastapi import FastAPI, Depends\nfrom fastapi_easy_versioning import VersioningMiddleware, versioning\n\napp = FastAPI()\napp_v1 = FastAPI(api_version=1)\napp_v2 = FastAPI(api_version=2)\n\napp.mount(\"/v1\", app_v1)\napp.mount(\"/v2\", app_v2)\napp.add_middleware(VersioningMiddleware)\n</code></pre> <p>\u0415\u0441\u043b\u0438 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0434\u0432\u0430 \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u0438\u0437\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 API, \u043a\u0430\u0436\u0434\u044b\u0439 \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0434\u043e\u043b\u0436\u0435\u043d \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e, \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c <code>VersioningMiddleware</code> \u0432 \u043a\u0430\u0436\u0434\u043e\u0435 \u0442\u0430\u043a\u043e\u0435 \u0430\u0433\u0440\u0435\u0433\u0438\u0440\u0443\u044e\u0449\u0435\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435.</p> <pre><code>from fastapi import Depends, FastAPI, middleware\nfrom fastapi_easy_versioning import VersioningMiddleware\n\napp = FastAPI()\n\npublic_app = FastAPI(middleware=[middleware.Middleware(VersioningMiddleware)])\npublic_v1 = FastAPI(api_version=1)\npublic_v2 = FastAPI(api_version=2)\n\nprivate_app = FastAPI(middleware=[middleware.Middleware(VersioningMiddleware)])\nprivate_v1 = FastAPI(api_version=1)\nprivate_v2 = FastAPI(api_version=2)\n\napp.mount(\"/api/public\", public_app)\npublic_app.mount(\"/v1\", public_v1)\npublic_app.mount(\"/v2\", public_v2)\n\napp.mount(\"/api/private\", private_app)\nprivate_app.mount(\"/v1\", private_v1)\nprivate_app.mount(\"/v2\", private_v2)\n</code></pre>"},{"location":"ru/middleware/#-","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439-\u0432\u0435\u0440\u0441\u0438\u0439","text":"<p>Middleware \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u043a\u0430\u043a\u0438\u0435 FastAPI-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0443\u0447\u0430\u0441\u0442\u0432\u0443\u044e\u0442 \u0432 \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438, \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e extra-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 <code>api_version</code>. \u0415\u0441\u043b\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u044d\u0442\u043e\u0433\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430, \u043e\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u0438 \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438: \u0432 \u043d\u0435\u0433\u043e \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b, \u0438 \u0438\u0437 \u043d\u0435\u0433\u043e \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0431\u0440\u0430\u0442\u044c\u0441\u044f \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0431\u044b\u043b\u0438 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u043f\u043e\u043c\u0435\u0447\u0435\u043d\u044b \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 <code>VersioningSupport</code>.</p>"},{"location":"ru/middleware/#middleware_1","title":"\u0420\u0430\u0431\u043e\u0442\u0430 middleware","text":"<p>Middleware \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432 \u0438 \u0441\u0443\u0431\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u043f\u0440\u0438 \u043f\u0435\u0440\u0432\u043e\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u0432 \u0441\u0443\u0431\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0438\u0445 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c\u0438 \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u0435\u0440\u0435\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442 OpenAPI-\u0441\u0445\u0435\u043c\u0443.</p> <p>Middleware \u043a\u044d\u0448\u0438\u0440\u0443\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0445 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430\u0445 \u0438 \u043f\u0440\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\u0445 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443. \u041e\u0434\u043d\u0430\u043a\u043e \u0435\u0441\u043b\u0438 \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043f\u0440\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u0432\u043e \u0432\u0441\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0441\u0443\u0431\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0438 \u0438\u0445 OpenAPI-\u0441\u0445\u0435\u043c\u0430 \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0435\u0441\u0442\u0440\u043e\u0435\u043d\u0430.</p>"},{"location":"ru/examples/multiple/","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 API","text":"<p>\u041f\u0440\u0438\u043c\u0435\u0440 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0432 GitHub.</p> <p>\u0414\u043b\u044f \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043a\u043b\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443:</p> <pre><code>git clone https://github.com/feodor-ra/fastapi-easy-versioning.git\n</code></pre> <pre><code>uvx --python=3.13 --from=\"fastapi[standard]\" --with=\"fastapi-easy-versioning\" fastapi dev fastapi-easy-versioning/examples/multiple_versioning.py\n</code></pre> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:</p> <pre><code>from fastapi import Depends, FastAPI, middleware\nfrom fastapi_easy_versioning import (\n    VersioningMiddleware,\n    versioning,\n)\n\napp = FastAPI()\n\npublic_app = FastAPI(middleware=[middleware.Middleware(VersioningMiddleware)])\npublic_v1 = FastAPI(api_version=1)\npublic_v2 = FastAPI(api_version=2)\n\nprivate_app = FastAPI(middleware=[middleware.Middleware(VersioningMiddleware)])\nprivate_v1 = FastAPI(api_version=1)\nprivate_v2 = FastAPI(api_version=2)\n\napp.mount(\"/api/public\", public_app)\npublic_app.mount(\"/v1\", public_v1)\npublic_app.mount(\"/v2\", public_v2)\n\napp.mount(\"/api/private\", private_app)\nprivate_app.mount(\"/v1\", private_v1)\nprivate_app.mount(\"/v2\", private_v2)\n\n\n@private_v1.get(\"/endpoint\", dependencies=[Depends(versioning(until=1))])\ndef private_endpoint() -&gt; str:\n    return \"I'm v1 private endpoint\"\n\n\n@private_v1.get(\"/another-endpoint\", dependencies=[Depends(versioning())])\ndef private_another_endpoint() -&gt; str:\n    return \"I'm v1 private another endpoint\"\n\n\n@private_v2.get(\"/endpoint\", dependencies=[Depends(versioning())])\ndef private_endpoint_v2() -&gt; str:\n    return \"I'm v2 private endpoint\"\n\n\n@public_v1.get(\"/endpoint\", dependencies=[Depends(versioning(until=1))])\ndef public_endpoint() -&gt; str:\n    return \"I'm v1 public endpoint\"\n\n\n@public_v1.get(\"/another-endpoint\", dependencies=[Depends(versioning())])\ndef public_another_endpoint() -&gt; str:\n    return \"I'm v1 public another endpoint\"\n\n\n@public_v2.get(\"/endpoint\", dependencies=[Depends(versioning())])\ndef public_endpoint_v2() -&gt; str:\n    return \"I'm v2 public endpoint\"\n</code></pre> <p>\u042d\u0442\u043e\u0442 \u043a\u043e\u0434 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0434\u0432\u0430 \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0445 \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 API: public \u0438 private. \u041a\u0430\u0436\u0434\u043e\u0435 \u0438\u0437 \u043d\u0438\u0445 \u0438\u043c\u0435\u0435\u0442 \u0434\u0432\u0435 \u0432\u0435\u0440\u0441\u0438\u0438 (v1 \u0438 v2). \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f Swagger \u0434\u043b\u044f \u043d\u0438\u0445 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u043f\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u0441\u0441\u044b\u043b\u043a\u0430\u043c:</p> <ul> <li>Public API v1: http://127.0.0.1:8000/api/public/v1/docs</li> <li>Public API v2: http://127.0.0.1:8000/api/public/v2/docs</li> <li>Private API v1: http://127.0.0.1:8000/api/private/v1/docs</li> <li>Private API v2: http://127.0.0.1:8000/api/private/v2/docs</li> </ul> <p>\u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430:</p> <ul> <li>\u0412 public API:</li> <li><code>/endpoint</code> \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0432\u0435\u0440\u0441\u0438\u0438 v1 (\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 <code>until=1</code>)</li> <li><code>/another-endpoint</code> \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432\u043e \u0432\u0441\u0435\u0445 \u0432\u0435\u0440\u0441\u0438\u044f\u0445 (\u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 v1)</li> <li> <p>\u0432\u043e v2 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u043e\u0432\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 <code>/endpoint</code>, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0435\u0440\u0435\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e \u0438\u0437 v1</p> </li> <li> <p>\u0412 private API:</p> </li> <li><code>/endpoint</code> \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0432\u0435\u0440\u0441\u0438\u0438 v1 (\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 <code>until=1</code>)</li> <li><code>/another-endpoint</code> \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432\u043e \u0432\u0441\u0435\u0445 \u0432\u0435\u0440\u0441\u0438\u044f\u0445 (\u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 v1)</li> <li>\u0432\u043e v2 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u043e\u0432\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 <code>/endpoint</code>, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0435\u0440\u0435\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u044e \u0438\u0437 v1</li> </ul> <p>\u041e\u0431\u0430 API \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e \u0434\u0440\u0443\u0433 \u043e\u0442 \u0434\u0440\u0443\u0433\u0430 \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 <code>VersioningMiddleware</code>.</p> <pre><code>graph TD\n    A[API Endpoints Availability] --&gt; B[Public API]\n    A --&gt; C[Private API]\n\n    B --&gt; B1[v1&lt;br/&gt;api_version=1]\n    B --&gt; B2[v2&lt;br/&gt;api_version=2]\n\n    C --&gt; C1[v1&lt;br/&gt;api_version=1]\n    C --&gt; C2[v2&lt;br/&gt;api_version=2]\n\n    B1 --&gt; B11[\"/endpoint \u2713&lt;br/&gt;(until=1)\"]\n    B1 --&gt; B12[\"/another-endpoint \u2713\"]\n\n    B2 --&gt; B21[\"/endpoint \u2713&lt;br/&gt;(from v2)\"]\n    B2 --&gt; B22[\"/another-endpoint \u2713\"]\n\n    C1 --&gt; C11[\"/endpoint \u2713&lt;br/&gt;(until=1)\"]\n    C1 --&gt; C12[\"/another-endpoint \u2713\"]\n\n    C2 --&gt; C21[\"/endpoint \u2713&lt;br/&gt;(from v2)\"]\n    C2 --&gt; C22[\"/another-endpoint \u2713\"]\n\n    style B11 fill:#90EE90\n    style B12 fill:#90EE90\n    style B21 fill:#90EE90\n    style B22 fill:#90EE90\n\n    style C11 fill:#90EE90\n    style C12 fill:#90EE90\n    style C21 fill:#90EE90\n    style C22 fill:#90EE90\n\n    classDef available fill:#90EE90,stroke:#333;\n    classDef notAvailable fill:#FFB6C1,stroke:#333;</code></pre>"},{"location":"ru/examples/simple/","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f","text":"<p>\u041f\u0440\u0438\u043c\u0435\u0440 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0432 GitHub.</p> <p>\u0414\u043b\u044f \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043a\u043b\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443:</p> <pre><code>git clone https://github.com/feodor-ra/fastapi-easy-versioning.git\n</code></pre> <pre><code>uvx --python=3.13 --from=\"fastapi[standard]\" --with=\"fastapi-easy-versioning\" fastapi dev fastapi-easy-versioning/examples/simple_versioning.py\n</code></pre> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:</p> <pre><code>from typing import Annotated\n\nfrom fastapi import Depends, FastAPI, middleware\nfrom fastapi_easy_versioning import (\n    VersioningMiddleware,\n    VersioningSupport,\n    versioning,\n)\n\napp = FastAPI(middleware=[middleware.Middleware(VersioningMiddleware)])\napp_v1 = FastAPI(api_version=1)\napp_v2 = FastAPI(api_version=2)\napp_v3 = FastAPI(api_version=3)\n\napp.mount(\"/v1\", app_v1)\napp.mount(\"/v2\", app_v2)\napp.mount(\"/v3\", app_v3)\n\n\n@app_v1.get(\"/endpoint\", dependencies=[Depends(versioning(until=2))])\ndef endpoint() -&gt; str:\n    return \"I'm v1 endpoint\"\n\n\n@app_v1.get(\"/another-endpoint\")\ndef another_endpoint(\n    version: Annotated[VersioningSupport, Depends(versioning())],\n) -&gt; str:\n    return f\"I'm v{version.origin} another endpoint\"\n\n\n@app_v2.get(\"/new-another-endpoint\", dependencies=[Depends(versioning())])\ndef new_another_endpoint() -&gt; str:\n    return \"I'm v2 new another endpoint\"\n\n\n@app_v3.get(\"/another-endpoint\", dependencies=[Depends(versioning())])\ndef overload_another_endpoint() -&gt; str:\n    return \"I'm v3 overloaded another endpoint\"\n</code></pre> <p>\u042d\u0442\u043e\u0442 \u043a\u043e\u0434 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0442\u0440\u0438 \u0432\u0435\u0440\u0441\u0438\u0438 API (v1, v2, v3), \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f Swagger \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u043f\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u0441\u0441\u044b\u043b\u043a\u0430\u043c:</p> <ul> <li>http://127.0.0.1:8000/v1/docs</li> <li>http://127.0.0.1:8000/v2/docs</li> <li>http://127.0.0.1:8000/v3/docs</li> </ul> <p>\u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430:</p> <ul> <li>\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0434\u0432\u0430 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430:</li> <li><code>/endpoint</code>, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 \u0432\u0435\u0440\u0441\u0438\u044f\u0445 v1 \u0438 v2 (\u0443\u043a\u0430\u0437\u0430\u043d\u043e \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 <code>until=2</code>)</li> <li> <p><code>/another-endpoint</code>, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432\u043e \u0432\u0441\u0435\u0445 \u0432\u0435\u0440\u0441\u0438\u044f\u0445 (v1, v2 \u0438 v3)</p> </li> <li> <p>\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u043e\u0432\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 <code>/new-another-endpoint</code>, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432\u043e \u0432\u0441\u0435\u0445 \u0432\u0435\u0440\u0441\u0438\u044f\u0445, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 v2 (v2 \u0438 v3)</p> </li> <li> <p>\u0412 \u0442\u0440\u0435\u0442\u044c\u0435\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 <code>/another-endpoint</code>, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u043e\u0434\u043d\u043e\u0438\u043c\u0435\u043d\u043d\u044b\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u0438\u0437 \u043f\u0435\u0440\u0432\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 \u0438 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432\u043e \u0432\u0441\u0435\u0445 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0432\u0435\u0440\u0441\u0438\u044f\u0445</p> </li> </ul> <pre><code>graph TD\n    A[\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u044c \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432] --&gt; B[v1&lt;br/&gt;api_version=1]\n    A --&gt; C[v2&lt;br/&gt;api_version=2]\n    A --&gt; D[v3&lt;br/&gt;api_version=3]\n\n    B --&gt; B1[\"/endpoint \u2713&lt;br/&gt;(until=2)\"]\n    B --&gt; B2[\"/another-endpoint \u2713\"]\n\n    C --&gt; C1[\"/endpoint \u2713&lt;br/&gt;(until=2)\"]\n    C --&gt; C2[\"/another-endpoint \u2713\"]\n    C --&gt; C3[\"/new-another-endpoint \u2713\"]\n\n    D --&gt; D1[\"/endpoint \u2717&lt;br/&gt;(until=2)\"]\n    D --&gt; D2[\"/another-endpoint \u2713&lt;br/&gt;(\u043f\u0435\u0440\u0435\u043a\u0440\u044b\u0442 \u0432 v3)\"]\n    D --&gt; D3[\"/new-another-endpoint \u2713\"]\n\n    style B1 fill:#90EE90\n    style B2 fill:#90EE90\n\n    style C1 fill:#90EE90\n    style C2 fill:#90EE90\n    style C3 fill:#90EE90\n\n    style D1 fill:#FFB6C1\n    style D2 fill:#90EE90\n    style D3 fill:#90EE90\n\n    classDef available fill:#90EE90,stroke:#333;\n    classDef notAvailable fill:#FFB6C1,stroke:#333;</code></pre>"},{"location":"","title":"FastAPI Easy Versioning","text":"<p>The English documentation has been automatically translated. If you notice any grammatical or semantic errors, please help improve it by contributing corrections on GitHub, or refer to the original Russian documentation.</p> <p>This is a solution for building versioned APIs automatically using FastAPI. It enables automatic inheritance of endpoints from previous FastAPI sub-applications into newer versions based on configuration, and correctly reflects them in the OpenAPI schema.</p>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install fastapi-easy-versioning\n</code></pre> <p>PyPI</p>"},{"location":"#usage","title":"Usage","text":"<p>To implement versioning, use the <code>VersioningMiddleware</code> and the dependency factory <code>versioning</code>.</p> <p>Example:</p> <pre><code>from fastapi import FastAPI, Depends\nfrom fastapi_easy_versioning import VersioningMiddleware, versioning\n\napp = FastAPI()\napp_v1 = FastAPI(api_version=1)\napp_v2 = FastAPI(api_version=2)\n\napp.mount(\"/v1\", app_v1)\napp.mount(\"/v2\", app_v2)\napp.add_middleware(VersioningMiddleware)\n\n@app_v1.get('/only-v1', dependencies=[Depends(versioning(until=1))])\ndef only_v1() -&gt; str:\n    return \"Available only in version v1\"\n\n@app_v1.get('/all-versions', dependencies=[Depends(versioning())])\ndef all_versions() -&gt; str:\n    return \"Available in all versions starting from v1\"\n\n@app_v2.get('/from-v2', dependencies=[Depends(versioning())])\ndef from_v2() -&gt; str:\n    return \"Available starting from v2 and in all future versions\"\n</code></pre> <pre><code>graph TD\n    A[Availability by version]\n    A --&gt; B[v1]\n    A --&gt; C[v2]\n\n    B --&gt; B1[\"/only-v1 \u2713\"]\n    B --&gt; B2[\"/all-versions \u2713\"]\n    B --&gt; B3[\"/from-v2 \u2717\"]\n\n    C --&gt; C1[\"/only-v1 \u2717\"]\n    C --&gt; C2[\"/all-versions \u2713\"]\n    C --&gt; C3[\"/from-v2 \u2713\"]\n\n    style B1 fill:#90EE90\n    style B2 fill:#90EE90\n    style B3 fill:#FFB6C1\n\n    style C1 fill:#FFB6C1\n    style C2 fill:#90EE90\n    style C3 fill:#90EE90</code></pre> <p>The endpoint <code>/only-v1</code> is available only in version <code>v1</code> at <code>/v1/only-v1</code>. The endpoint <code>/from-v2</code> becomes available starting from version <code>v2</code> at <code>/v2/from-v2</code> and is automatically inherited in all subsequent versions. The endpoint <code>/all-versions</code>, defined in <code>v1</code>, is accessible at both <code>/v1/all-versions</code> and <code>/v2/all-versions</code> due to the inheritance mechanism.</p> <p>Using the <code>versioning</code> dependency factory, you can specify the last version in which an endpoint remains available by setting the <code>until</code> parameter to a version number. If <code>until</code> is set to <code>None</code> or omitted, the endpoint will be available in the version it was declared and in all later versions.</p> <p>To associate a sub-application with a specific version, use the <code>api_version</code> parameter when creating the <code>FastAPI</code> instance. It must be an integer. Sub-applications without the <code>api_version</code> parameter will be ignored during versioning processing.</p> <p>More examples are available in the examples section.</p>"},{"location":"dependency/","title":"Versioning Dependency","text":"<p>The English documentation has been automatically translated. If you notice any grammatical or semantic errors, please help improve it by contributing corrections on GitHub, or refer to the original Russian documentation.</p> <p>The <code>VersioningSupport</code> dependency and its factory <code>versioning</code> form the core mechanism for configuring and parameterizing API versioning.</p> <p>The <code>versioning</code> factory allows you to specify the API version up to which an endpoint will be included in subsequent FastAPI sub-applications. If the factory is called without arguments or with <code>None</code>, the endpoint will be present in all future versions of the API.</p>"},{"location":"dependency/#using-the-dependency","title":"Using the Dependency","text":"<p>It is recommended to create the dependency through the <code>versioning</code> factory. The dependency can be added in all locations supported by the FastAPI interface.</p> <pre><code>from fastapi import FastAPI, Depends\nfrom fastapi_easy_versioning import versioning\n\nv1_app = FastAPI(api_version=1)\n\n@v1_app.get('/decorated-endpoint', dependencies=[Depends(versioning())])\ndef endpoint() -&gt; None: ...\n\n# Can also be added via the application's add_api_route method\nv1_app.add_api_route('/app-add_api_route-call-endpoint', endpoint, dependencies=[Depends(versioning())])\n\n# Or directly through the router\nv1_app.router.add_api_route('/router-add_api_route-call-endpoint', endpoint, dependencies=[Depends(versioning())])\n</code></pre> <p>The dependency can be added to an entire router during initialization of a separate router or the whole FastAPI application. In this case, all endpoints added to it will participate in versioning according to the factory settings.</p> <pre><code>from fastapi import FastAPI, Depends, APIRouter\nfrom fastapi_easy_versioning import versioning\n\nv1_app = FastAPI(api_version=1)\nv2_app = FastAPI(api_version=2, dependencies=[Depends(versioning(until=2))])\n\nrouter = APIRouter(dependencies=[Depends(versioning())])\nv1_app.include_router(router)\n</code></pre>"},{"location":"dependency/#accessing-dependency-data","title":"Accessing Dependency Data","text":"<p>The dependency can be injected into an endpoint using the <code>Annotated</code> syntax or the traditional dependency injection mechanism.</p> <pre><code>from fastapi import FastAPI, Depends\nfrom typing import Annotated\nfrom fastapi_easy_versioning import VersioningSupport, versioning\n\nv1_app = FastAPI(api_version=1)\n\n@v1_app.get('/endpoint')\ndef endpoint(version: Annotated[VersioningSupport, Depends(versioning())]) -&gt; str:\n    return f\"Available from version {version.origin} to version {version.until}\"\n</code></pre> <p>This provides access to the versioning configuration for reading:</p> <ul> <li><code>origin</code> \u2013 the version number from which the endpoint was added</li> <li><code>until</code> \u2013 the version number up to which the endpoint is available. If not specified explicitly, it will be set to the latest available API version.</li> </ul>"},{"location":"middleware/","title":"Middleware","text":"<p>The English documentation has been automatically translated. If you notice any grammatical or semantic errors, please help improve it by contributing corrections on GitHub, or refer to the original Russian documentation.</p> <p>The <code>VersioningMiddleware</code> handles the core functionality of API versioning.</p> <p>The middleware is added only to the FastAPI application that aggregates sub-applications responsible for specific versions.</p> <pre><code>from fastapi import FastAPI, Depends\nfrom fastapi_easy_versioning import VersioningMiddleware, versioning\n\napp = FastAPI()\napp_v1 = FastAPI(api_version=1)\napp_v2 = FastAPI(api_version=2)\n\napp.mount(\"/v1\", app_v1)\napp.mount(\"/v2\", app_v2)\napp.add_middleware(VersioningMiddleware)\n</code></pre> <p>If you need to create two or more isolated versioned APIs that should operate independently, you should add <code>VersioningMiddleware</code> to each such aggregating application.</p> <pre><code>from fastapi import Depends, FastAPI, middleware\nfrom fastapi_easy_versioning import VersioningMiddleware\n\napp = FastAPI()\n\npublic_app = FastAPI(middleware=[middleware.Middleware(VersioningMiddleware)])\npublic_v1 = FastAPI(api_version=1)\npublic_v2 = FastAPI(api_version=2)\n\nprivate_app = FastAPI(middleware=[middleware.Middleware(VersioningMiddleware)])\nprivate_v1 = FastAPI(api_version=1)\nprivate_v2 = FastAPI(api_version=2)\n\napp.mount(\"/api/public\", public_app)\npublic_app.mount(\"/v1\", public_v1)\npublic_app.mount(\"/v2\", public_v2)\n\napp.mount(\"/api/private\", private_app)\nprivate_app.mount(\"/v1\", private_v1)\nprivate_app.mount(\"/v2\", private_v2)\n</code></pre>"},{"location":"middleware/#versioned-applications-configuration","title":"Versioned Applications Configuration","text":"<p>The middleware identifies which FastAPI applications participate in versioning using the <code>api_version</code> extra parameter. If an application doesn't have this parameter, it will be ignored during versioning: endpoints won't be added to it, and endpoints won't be taken from it, even if they were correctly marked with the <code>VersioningSupport</code> dependency.</p>"},{"location":"middleware/#middleware-operation","title":"Middleware Operation","text":"<p>The middleware checks for versioned endpoints and sub-applications on the first request and adds endpoints to sub-applications according to their versioning settings, while also rebuilding the OpenAPI schema.</p> <p>The middleware caches information about built endpoints and doesn't perform additional work on subsequent requests. However, if a versioned endpoint is added during runtime, it will be added to all relevant sub-applications on the next request, and their OpenAPI schemas will be rebuilt.</p>"},{"location":"examples/multiple/","title":"Multiple APIs Versioning Example","text":"<p>The English documentation has been automatically translated. If you notice any grammatical or semantic errors, please help improve it by contributing corrections on GitHub, or refer to the original Russian documentation.</p> <p>The example is available on GitHub.</p> <p>To run it locally, clone the repository and execute the following command:</p> <pre><code>git clone https://github.com/feodor-ra/fastapi-easy-versioning.git\n</code></pre> <pre><code>uvx --python=3.13 --from=\"fastapi[standard]\" --with=\"fastapi-easy-versioning\" fastapi dev fastapi-easy-versioning/examples/multiple_versioning.py\n</code></pre> <p>The example contains the following code:</p> <pre><code>from fastapi import Depends, FastAPI, middleware\nfrom fastapi_easy_versioning import (\n    VersioningMiddleware,\n    versioning,\n)\n\napp = FastAPI()\n\npublic_app = FastAPI(middleware=[middleware.Middleware(VersioningMiddleware)])\npublic_v1 = FastAPI(api_version=1)\npublic_v2 = FastAPI(api_version=2)\n\nprivate_app = FastAPI(middleware=[middleware.Middleware(VersioningMiddleware)])\nprivate_v1 = FastAPI(api_version=1)\nprivate_v2 = FastAPI(api_version=2)\n\napp.mount(\"/api/public\", public_app)\npublic_app.mount(\"/v1\", public_v1)\npublic_app.mount(\"/v2\", public_v2)\n\napp.mount(\"/api/private\", private_app)\nprivate_app.mount(\"/v1\", private_v1)\nprivate_app.mount(\"/v2\", private_v2)\n\n\n@private_v1.get(\"/endpoint\", dependencies=[Depends(versioning(until=1))])\ndef private_endpoint() -&gt; str:\n    return \"I'm v1 private endpoint\"\n\n\n@private_v1.get(\"/another-endpoint\", dependencies=[Depends(versioning())])\ndef private_another_endpoint() -&gt; str:\n    return \"I'm v1 private another endpoint\"\n\n\n@private_v2.get(\"/endpoint\", dependencies=[Depends(versioning())])\ndef private_endpoint_v2() -&gt; str:\n    return \"I'm v2 private endpoint\"\n\n\n@public_v1.get(\"/endpoint\", dependencies=[Depends(versioning(until=1))])\ndef public_endpoint() -&gt; str:\n    return \"I'm v1 public endpoint\"\n\n\n@public_v1.get(\"/another-endpoint\", dependencies=[Depends(versioning())])\ndef public_another_endpoint() -&gt; str:\n    return \"I'm v1 public another endpoint\"\n\n\n@public_v2.get(\"/endpoint\", dependencies=[Depends(versioning())])\ndef public_endpoint_v2() -&gt; str:\n    return \"I'm v2 public endpoint\"\n</code></pre> <p>This code creates two independent versioned APIs: public and private. Each has two versions (v1 and v2). Swagger documentation for them is available at:</p> <ul> <li>Public API v1: http://127.0.0.1:8000/api/public/v1/docs</li> <li>Public API v2: http://127.0.0.1:8000/api/public/v2/docs</li> <li>Private API v1: http://127.0.0.1:8000/api/private/v1/docs</li> <li>Private API v2: http://127.0.0.1:8000/api/private/v2/docs</li> </ul> <p>The resulting structure is as follows:</p> <ul> <li>In the public API:</li> <li><code>/endpoint</code> is available only in version v1 (with <code>until=1</code> restriction)</li> <li><code>/another-endpoint</code> is available in all versions (starting from v1)</li> <li> <p>in v2, a new <code>/endpoint</code> is added, which overrides the version from v1</p> </li> <li> <p>In the private API:</p> </li> <li><code>/endpoint</code> is available only in version v1 (with <code>until=1</code> restriction)</li> <li><code>/another-endpoint</code> is available in all versions (starting from v1)</li> <li>in v2, a new <code>/endpoint</code> is added, which overrides the version from v1</li> </ul> <p>Both APIs operate independently thanks to the use of separate <code>VersioningMiddleware</code> instances.</p> <pre><code>graph TD\n    A[Endpoint Availability] --&gt; B[Public API]\n    A --&gt; C[Private API]\n\n    B --&gt; B1[v1&lt;br/&gt;api_version=1]\n    B --&gt; B2[v2&lt;br/&gt;api_version=2]\n\n    C --&gt; C1[v1&lt;br/&gt;api_version=1]\n    C --&gt; C2[v2&lt;br/&gt;api_version=2]\n\n    B1 --&gt; B11[\"/endpoint \u2713&lt;br/&gt;(until=1)\"]\n    B1 --&gt; B12[\"/another-endpoint \u2713\"]\n\n    B2 --&gt; B21[\"/endpoint \u2713&lt;br/&gt;(from v2)\"]\n    B2 --&gt; B22[\"/another-endpoint \u2713\"]\n\n    C1 --&gt; C11[\"/endpoint \u2713&lt;br/&gt;(until=1)\"]\n    C1 --&gt; C12[\"/another-endpoint \u2713\"]\n\n    C2 --&gt; C21[\"/endpoint \u2713&lt;br/&gt;(from v2)\"]\n    C2 --&gt; C22[\"/another-endpoint \u2713\"]\n\n    style B11 fill:#90EE90\n    style B12 fill:#90EE90\n    style B21 fill:#90EE90\n    style B22 fill:#90EE90\n\n    style C11 fill:#90EE90\n    style C12 fill:#90EE90\n    style C21 fill:#90EE90\n    style C22 fill:#90EE90\n\n    classDef available fill:#90EE90,stroke:#333;\n    classDef notAvailable fill:#FFB6C1,stroke:#333;</code></pre>"},{"location":"examples/simple/","title":"Simple Versioning Example","text":"<p>The English documentation has been automatically translated. If you notice any grammatical or semantic errors, please help improve it by contributing corrections on GitHub, or refer to the original Russian documentation.</p> <p>The example is available on GitHub.</p> <p>To run it locally, clone the repository and execute the following command:</p> <pre><code>git clone https://github.com/feodor-ra/fastapi-easy-versioning.git\n</code></pre> <pre><code>uvx --python=3.13 --from=\"fastapi[standard]\" --with=\"fastapi-easy-versioning\" fastapi dev fastapi-easy-versioning/examples/simple_versioning.py\n</code></pre> <p>The example contains the following code:</p> <pre><code>from typing import Annotated\n\nfrom fastapi import Depends, FastAPI, middleware\nfrom fastapi_easy_versioning import (\n    VersioningMiddleware,\n    VersioningSupport,\n    versioning,\n)\n\napp = FastAPI(middleware=[middleware.Middleware(VersioningMiddleware)])\napp_v1 = FastAPI(api_version=1)\napp_v2 = FastAPI(api_version=2)\napp_v3 = FastAPI(api_version=3)\n\napp.mount(\"/v1\", app_v1)\napp.mount(\"/v2\", app_v2)\napp.mount(\"/v3\", app_v3)\n\n\n@app_v1.get(\"/endpoint\", dependencies=[Depends(versioning(until=2))])\ndef endpoint() -&gt; str:\n    return \"I'm v1 endpoint\"\n\n\n@app_v1.get(\"/another-endpoint\")\ndef another_endpoint(\n    version: Annotated[VersioningSupport, Depends(versioning())],\n) -&gt; str:\n    return f\"I'm v{version.origin} another endpoint\"\n\n\n@app_v2.get(\"/new-another-endpoint\", dependencies=[Depends(versioning())])\ndef new_another_endpoint() -&gt; str:\n    return \"I'm v2 new another endpoint\"\n\n\n@app_v3.get(\"/another-endpoint\", dependencies=[Depends(versioning())])\ndef overload_another_endpoint() -&gt; str:\n    return \"I'm v3 overloaded another endpoint\"\n</code></pre> <p>This code creates three API versions (v1, v2, v3), with Swagger documentation available at:</p> <ul> <li>http://127.0.0.1:8000/v1/docs</li> <li>http://127.0.0.1:8000/v2/docs</li> <li>http://127.0.0.1:8000/v3/docs</li> </ul> <p>The resulting structure is as follows:</p> <ul> <li>The first version includes two endpoints:</li> <li><code>/endpoint</code>, available in versions v1 and v2 (with <code>until=2</code> restriction)</li> <li> <p><code>/another-endpoint</code>, available across all versions (v1, v2, and v3)</p> </li> <li> <p>The second version introduces a new endpoint <code>/new-another-endpoint</code>, available in all versions starting from v2 (v2 and v3)</p> </li> <li> <p>The third version adds an endpoint <code>/another-endpoint</code> that overrides the same-named endpoint from the first version and will be available in all subsequent versions</p> </li> </ul> <pre><code>graph TD\n    A[Endpoint Availability] --&gt; B[v1&lt;br/&gt;api_version=1]\n    A --&gt; C[v2&lt;br/&gt;api_version=2]\n    A --&gt; D[v3&lt;br/&gt;api_version=3]\n\n    B --&gt; B1[\"/endpoint \u2713&lt;br/&gt;(until=2)\"]\n    B --&gt; B2[\"/another-endpoint \u2713\"]\n\n    C --&gt; C1[\"/endpoint \u2713&lt;br/&gt;(until=2)\"]\n    C --&gt; C2[\"/another-endpoint \u2713\"]\n    C --&gt; C3[\"/new-another-endpoint \u2713\"]\n\n    D --&gt; D1[\"/endpoint \u2717&lt;br/&gt;(until=2)\"]\n    D --&gt; D2[\"/another-endpoint \u2713&lt;br/&gt;(overridden in v3)\"]\n    D --&gt; D3[\"/new-another-endpoint \u2713\"]\n\n    style B1 fill:#90EE90\n    style B2 fill:#90EE90\n\n    style C1 fill:#90EE90\n    style C2 fill:#90EE90\n    style C3 fill:#90EE90\n\n    style D1 fill:#FFB6C1\n    style D2 fill:#90EE90\n    style D3 fill:#90EE90\n\n    classDef available fill:#90EE90,stroke:#333;\n    classDef notAvailable fill:#FFB6C1,stroke:#333;</code></pre>"}]}